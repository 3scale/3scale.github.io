@charset "utf-8";

// Define defaults for each variable.
$fa-font-path:        "../assets/fonts" !default;
$base-font-family:  'Overpass', helvetica, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol" !default;
$base-font-size:   16px !default;
$base-font-weight: 400 !default;
$small-font-size:  $base-font-size * 0.875 !default;
$base-line-height: 1.5 !default;

$text-color:       #111 !default;
$solid-background-color: rgba(#dadada, .95) !default;
$background-color: rgba(#dadada, .95) !default;
$light-background-color: rgba(white, 0.95);
$appleGreen:     #32CD32;
$brand-color:      #FF7314 !default;

$grey-color:       #828282 !default;
$grey-color-light: lighten($grey-color, 40%) !default;
$grey-color-dark:  darken($grey-color, 25%) !default;

$table-text-align: left !default;

// Width of the content area
$content-width:    100% !default;

$on-palm:          600px !default;
$on-laptop:        800px !default;

// Use media queries like this:
// @include media-query($on-palm) {
//   .wrapper {
//     padding-right: $spacing-unit / 2;
//     padding-left: $spacing-unit / 2;
//   }
// }
@mixin media-query($device) {
  @media screen and (max-width: $device) {
    @content;
  }
}

@mixin relative-font-size($ratio) {
  font-size: $base-font-size * $ratio;
}

//$minScreen: 1rem;
//$maxScreen: 20rem;
$minScreen: 320px;
$maxScreen: 4000px;
$minFont: 0.8rem;
$maxFont: 400rem;

//  http://madebymike.com.au/writing/precise-control-responsive-typography/
// https://gist.github.com/indrekpaas/7f22e44ace49b5124eec
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}

		@media screen and (min-width: $min-vw) {
			@each $property in $properties {
				#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}

		@media screen and (min-width: $max-vw) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@function line-height-times($multiplier: 1, $subtract-border: false) {
  $spacer: $base-line-height *1rem * $multiplier;

  @if $subtract-border == true {
    @return calc(#{$spacer} - #{$border-width});
  }
  @else {
    @return $spacer;
  }
}

$spacing-unit: line-height-times(2);
// Import partials.
@import
  "3scale/base",
  "3scale/layout",
  "3scale/syntax-highlighting"
;
